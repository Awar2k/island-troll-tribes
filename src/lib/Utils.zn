library Utils requires Ascii, GameConfig, PublicLibrary {
	public function GetMinPlayerIdForTribe(integer tribeId) -> integer {
		integer numPlayersPerTribe = GameConfig.getInstance().getNumPlayersPerTribe();
		return numPlayersPerTribe * tribeId;
	}

	public function GetMaxPlayerIdForTribe(integer tribeId) -> integer {
		integer numPlayersPerTribe = GameConfig.getInstance().getNumPlayersPerTribe();
		return numPlayersPerTribe * (tribeId + 1) - 1;
	}

	public function ParsePlayerIdWithMinAndMax(string str, integer min, integer max) -> integer {
		string low = StringCase(str, false);
		integer length = StringLength(str);
		integer matches = 0;
		integer id;
		integer i;

		for (min <= i <= max) {
			if (StringCase(SubString(GetPlayerName(Player(i)), 0, length), false) == str) {
				id = i;
				matches += 1;
			}
		}

		if (matches == 1) {
			return id;
		}
		return -1;
	}

	public function ParsePlayerId(string str) -> integer {
		return ParsePlayerIdWithMinAndMax(str, 0, 11);
	}

	public function ParsePlayerIdOnTribe(string str, integer tribeId) -> integer {
		integer minTribeId = GetMinPlayerIdForTribe(tribeId);
		integer maxTribeId = GetMaxPlayerIdForTribe(tribeId);
		return ParsePlayerIdWithMinAndMax(str, minTribeId, maxTribeId);
	}

	public function IsPlayerPlaying(player p) -> boolean {
		return GetPlayerController(p) == MAP_CONTROL_USER && GetPlayerSlotState(p) == PLAYER_SLOT_STATE_PLAYING;
	}
}