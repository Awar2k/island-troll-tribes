library NoobTimeRevive requires ClassSelection, PublicLibrary, TimerUtils {
	constant integer NOOB_TIME_REVIVE_DELAY = 10;

	function checkNoobTime() -> boolean {
		return udg_NOOB_TIME && IsUnitTroll(GetDyingUnit());
	}

	function doRevive() {
		integer pid = GetTimerData(GetExpiredTimer());
		rect spawn = GetSpawn(pid);
		real x = GetRectCenterX(spawn);
		real y = GetRectCenterY(spawn);

		ReleaseTimer(GetExpiredTimer());
		ReviveHero(GetPlayerTroll(Player(pid)), x, y, false);
        SetPlayerState(Player(pid), PLAYER_STATE_RESOURCE_GOLD, udg_MAX_HEAT);

        if (GetLocalPlayer() == Player(pid)) {
            PanCameraToTimed(x, y, 0.3);
        }

		spawn = null;
	}

	function reviveUnit() {
		player p = GetOwningPlayer(GetDyingUnit());
		timer t = NewTimerEx(GetPlayerId(p));
		DisplayTextToPlayer(p, 0, 0, GENERAL_COLOR + "Grace period has not ended, your troll will revive in " + I2S(NOOB_TIME_REVIVE_DELAY) + " seconds");
		TimerStart(t, I2R(NOOB_TIME_REVIVE_DELAY), false, function doRevive);
		t = null;
		p = null;
	}

	function onInit() {
		trigger t = CreateTrigger();
		TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH);
		TriggerAddCondition(t, Condition(function checkNoobTime));
		TriggerAddAction(t, function reviveUnit);
		t = null;
	}
}

